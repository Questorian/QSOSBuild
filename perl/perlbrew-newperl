#!/usr/bin/env perl
use v5.10;
use strict;
use warnings;
use autodie qw/:all/;

my $as = shift
  or die "Usage: $0 <perl-version>";
my @args = @ARGV;

# trailing "t" means do threads
my @threads = ( $as =~ /t$/ ) ? (qw/-D usethreads/) : ();

$as =~ s/^5\.//;
my $perl = "5.$as";
$perl =~ s/t$//; # strip trailing "t" if any
my $lib = $as . '@std';

my @problem_modules = qw(
  JSON::XS
);

my @to_install = qw(


App::Ack
App::FatPacker
App::Todo
Archive::Zip
Class::DBI
Config::Tiny
Convert::NLS_DATE_FORMAT
Dancer
Date::Manip
Date::Tiny
DateTime
DateTime::Format::DateManip
DateTime::Format::ISO8601
DateTime::Format::MSSQL
DateTime::Format::Pg
DateTime::Format::SQLite
DateTime::Format::Strptime
DBD::SQLite
DBIx::Class
DBIx::Class::Schema::Loader
DBIx::Class::TimeStamp
Email::Find
Email::Valid
File::HomeDir
Finance::YahooQuote
HTML::LinkExtractor
HTML::TagCloud
HTML::Tree
HTML::TreeBuilder::XPath
HTTP::Tiny
Image::ExifTool
Image::Info
IO::Socket::SSL
JSON
Log::Log4perl
Mail::RFC822::Address
Module::Starter
Module::Starter::PBP
Mojolicious
Moose
MooseX::MarkAsMethods
MooseX::NonMoose
Net::OAuth
Net::Twitter
NetAddr::IP
Number::Format
PAR
PAR::Packer
Perl::Critic
Perl::Tidy
Plack
Readonly
Regexp::Common
Regexp::Common::Email::Address
Roman
SQL::Abstract
SQL::Translator
Template
Template::Plugin::Number::Format
Text::Template
Time::Tiny
WWW::Mechanize
XML::Simple
XML::Twig
XMLRPC::Lite
Modern::Perl
Log::Log4perl::Tiny
Dancer2
PDF::Reuse
XML::Feed
URI::Escape
WordPress
File::Copy::Recursive
Type::Tiny
Mouse
Mo
Starman
HTML::Strip
HTML::FormatText
Data::Dumper
Date::Calc
Spreadsheet::Read
Excel::Writer::XLSX
Vi::QuickFix
Path::Tiny
Pod::Markdown
Text::CSV
App::Perldoc::Search
XML::LibXML

);

my @no_man = qw/-D man1dir=none -D man3dir=none/;


sub run
{
my $cmd = join(' ', @_);
print "runnng: $cmd\n";
system $cmd;
}




# install perl and lock it down
run( qw/perlbrew install -j 4 --as/, $as, $perl, @threads, @no_man, @args );
# run( qw/perlbrew install --as/, $as, $perl, @threads, @no_man, @args );
run( qw/chmod -R a-w/, "$ENV{HOME}/perl5/perlbrew/perls/$as" );

# give us a local::lib for installing things
run( qw/perlbrew lib create/, $lib );

# let's avoid any pod tests when we try to install stuff
run( qw/perlbrew exec --with/, $lib, qw/cpanm TAP::Harness::Restricted/ );
local $ENV{HARNESS_SUBCLASS} = "TAP::Harness::Restricted";

# some things need forcing
run( qw/perlbrew exec --with/, $lib, qw/cpanm -f/, @problem_modules );

# now install the rest
run( qw/perlbrew exec --with/, $lib, qw/cpanm/, @to_install );

# repeat to catch any circularity problems
run( qw/perlbrew exec --with/, $lib, qw/cpanm/, @to_install );

